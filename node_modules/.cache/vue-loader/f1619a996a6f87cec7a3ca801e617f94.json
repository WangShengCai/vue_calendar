{"remainingRequest":"C:\\Users\\shengcai\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_vue-loader@15.7.1@vue-loader\\lib\\index.js??vue-loader-options!D:\\桌面\\已做公开课\\class一\\vue\\vue日历功能\\Calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\桌面\\已做公开课\\class一\\vue\\vue日历功能\\Calendar.vue","mtime":1569563772452},{"path":"C:\\Users\\shengcai\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_babel-loader@8.0.6@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\shengcai\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\shengcai\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_vue-loader@15.7.1@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    // 数据\r\n    data() {\r\n        return {\r\n            year: null,\r\n            month: null,\r\n            day: null,\r\n            curDate: null,\r\n        }\r\n    },\r\n    // 生命周期函数 创建后\r\n    created() {  \r\n        this.getInitTime();\r\n    },\r\n    // 方法列表\r\n    methods: {\r\n        getInitTime() {\r\n            const date = new Date();\r\n            this.year = date.getFullYear();\r\n            this.month = date.getMonth() + 1;\r\n            this.day = date.getDate();\r\n            this.curDate = `${this.year}-${this.month}-${this.day}`;\r\n        },\r\n        handleChooseDay(e) {\r\n            this.day = e.target.dataset.day;\r\n        },\r\n        handlePrev() {\r\n            if(this.month === 1) {\r\n                this.month = 12;\r\n                this.year --;       // 年减一\r\n            } else {\r\n                this.month --;\r\n            }\r\n            this.computedDay();\r\n        },\r\n        handleNext() {\r\n            if(this.month === 12) {\r\n                this.month = 1;\r\n                this.year ++;       // 年加一\r\n            } else {\r\n                this.month ++;\r\n            }\r\n            this.computedDay();\r\n        },\r\n        computedDay() {\r\n            // 获取的月份已经 ++ 或 -- 之后的天数\r\n            const allDay = new Date(this.year,this.month,0).getDate();\r\n            if(this.day > allDay) {\r\n                this.day = allDay;\r\n            }\r\n        }\r\n    },\r\n    // 计算属性\r\n    computed: {\r\n        // 获取一个月的一号是星期几\r\n        beginDay() {\r\n            return new Date(this.year,this.month - 1,1).getDay();/*注意：此处必须是 getDay()*/\r\n        },\r\n\r\n        // 获取当前月份的天数\r\n        // 一三五七八十腊，三十一天永不差。\r\n        // 四六九冬三十整，唯有二月二十八。\r\n        // 逢到闰年加一日，如果不加就算差。\r\n        // 闰年：\r\n        // 1：普通年能被4整除且不能被100整除的为闰年。(如2004年就是闰年，1900年不是闰年)\r\n        // 2：世纪年能被400整除的就是闰年。(如2000年是闰年，1900年不是闰年)\r\n        // 3：对于数值很大的年份，这年如果能整除3200，并且能整除172800则是闰年\r\n        curMonthTimes() {\r\n        // 方法一\r\n            // if([1,3,5,7,8,10,12].includes(this.month)) {\r\n            //     return 31; \r\n            // } else if([4,6,9,11].includes(this.month)) {\r\n            //     return 30;\r\n            // } else if(this.month % 4 == 0 && this.month % 100 != 0 || this.month % 400 == 0) {\r\n            //     return 29;\r\n            // } else{\r\n            //     return 28;\r\n            // }\r\n        // 方法二\r\n        return new Date(this.year,this.month,0).getDate();/*注意：此处必须是 getDate()*/\r\n        },\r\n\r\n        // 获取上月的天数\r\n        prevDays() {\r\n            return new Date(this.year,this.month - 1,0).getDate();/*注意：此处必须是 getDate()*/\r\n        },\r\n    },\r\n}\r\n",{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Calendar.vue","sourceRoot":".","sourcesContent":["<template>\r\n    <div class=\"calendar\">\r\n        <!-- 上方 -->\r\n        <div class=\"date-header\">\r\n            <div class=\"prev-month\" @click=\"handlePrev\"></div>\r\n            <div class=\"show-date\">{{ year }} 年 {{ month }} 月 {{ day }} 日</div>\r\n            <div class=\"next-month\" @click=\"handleNext\"></div>\r\n        </div>\r\n        <!-- 下方 -->\r\n        <div class=\"dte-content\">\r\n            <div class=\"week-header\">\r\n                <div v-for=\"item in ['日','一','二','三','四','五','六']\" :key=\"item\">{{ item }}</div>\r\n            </div>\r\n            <div class=\"week-day\">\r\n                <div class=\"every-day\" v-for=\"item in 42\" :key=\"item\">\r\n                    <!-- 正常天数 -->\r\n                    <div \r\n                    @click=\"handleChooseDay\" \r\n                    :data-day=\"item - beginDay\" \r\n                    :class=\"{\r\n                        'now-day':`${year}-${month}-${item - beginDay}` === curDate,\r\n                        'active-day':`${year}-${month}-${item - beginDay}` === `${year}-${month}-${day}`,\r\n                        }\" \r\n                    v-if=\"item - beginDay > 0 && item - beginDay <= curMonthTimes\">\r\n                        {{ item - beginDay }}\r\n                    </div>\r\n                    <!-- 上月天数 -->\r\n                    <div v-else-if=\"item - beginDay <= 0\" class=\"other-day\">{{ item - beginDay + prevDays }}</div>\r\n                    <!-- 下月天数 -->\r\n                    <div v-else class=\"other-day\">{{ item - beginDay - curMonthTimes }}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    // 数据\r\n    data() {\r\n        return {\r\n            year: null,\r\n            month: null,\r\n            day: null,\r\n            curDate: null,\r\n        }\r\n    },\r\n    // 生命周期函数 创建后\r\n    created() {  \r\n        this.getInitTime();\r\n    },\r\n    // 方法列表\r\n    methods: {\r\n        getInitTime() {\r\n            const date = new Date();\r\n            this.year = date.getFullYear();\r\n            this.month = date.getMonth() + 1;\r\n            this.day = date.getDate();\r\n            this.curDate = `${this.year}-${this.month}-${this.day}`;\r\n        },\r\n        handleChooseDay(e) {\r\n            this.day = e.target.dataset.day;\r\n        },\r\n        handlePrev() {\r\n            if(this.month === 1) {\r\n                this.month = 12;\r\n                this.year --;       // 年减一\r\n            } else {\r\n                this.month --;\r\n            }\r\n            this.computedDay();\r\n        },\r\n        handleNext() {\r\n            if(this.month === 12) {\r\n                this.month = 1;\r\n                this.year ++;       // 年加一\r\n            } else {\r\n                this.month ++;\r\n            }\r\n            this.computedDay();\r\n        },\r\n        computedDay() {\r\n            // 获取的月份已经 ++ 或 -- 之后的天数\r\n            const allDay = new Date(this.year,this.month,0).getDate();\r\n            if(this.day > allDay) {\r\n                this.day = allDay;\r\n            }\r\n        }\r\n    },\r\n    // 计算属性\r\n    computed: {\r\n        // 获取一个月的一号是星期几\r\n        beginDay() {\r\n            return new Date(this.year,this.month - 1,1).getDay();/*注意：此处必须是 getDay()*/\r\n        },\r\n\r\n        // 获取当前月份的天数\r\n        // 一三五七八十腊，三十一天永不差。\r\n        // 四六九冬三十整，唯有二月二十八。\r\n        // 逢到闰年加一日，如果不加就算差。\r\n        // 闰年：\r\n        // 1：普通年能被4整除且不能被100整除的为闰年。(如2004年就是闰年，1900年不是闰年)\r\n        // 2：世纪年能被400整除的就是闰年。(如2000年是闰年，1900年不是闰年)\r\n        // 3：对于数值很大的年份，这年如果能整除3200，并且能整除172800则是闰年\r\n        curMonthTimes() {\r\n        // 方法一\r\n            // if([1,3,5,7,8,10,12].includes(this.month)) {\r\n            //     return 31; \r\n            // } else if([4,6,9,11].includes(this.month)) {\r\n            //     return 30;\r\n            // } else if(this.month % 4 == 0 && this.month % 100 != 0 || this.month % 400 == 0) {\r\n            //     return 29;\r\n            // } else{\r\n            //     return 28;\r\n            // }\r\n        // 方法二\r\n        return new Date(this.year,this.month,0).getDate();/*注意：此处必须是 getDate()*/\r\n        },\r\n\r\n        // 获取上月的天数\r\n        prevDays() {\r\n            return new Date(this.year,this.month - 1,0).getDate();/*注意：此处必须是 getDate()*/\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style scroped>\r\n    .calendar{\r\n        width:500px;\r\n        margin:100px auto;\r\n        padding:10px;\r\n        border-radius:5px;\r\n        border:1px solid black;\r\n    }\r\n    /* 上方 */\r\n    .date-header{\r\n        width:100%;\r\n        display:flex;\r\n        line-height:30px;\r\n    }\r\n    .prev-month,.next-month{\r\n        border:15px solid transparent;\r\n        cursor:pointer;\r\n    }\r\n    .prev-month{\r\n        border-right-color:#007fff;\r\n    }\r\n    .next-month{\r\n        border-left-color:#007fff;\r\n    }\r\n    .show-date{\r\n        flex:1 1 0;\r\n        text-align:center;\r\n        color:#007fff;\r\n    }\r\n    /* 下方 */\r\n    .week-header{\r\n        display:flex;\r\n        margin:5px 0;\r\n    }\r\n    .week-header > div{\r\n        flex:1 1 0;\r\n        text-align:center;\r\n        line-height:30px;\r\n        background-color:#007fff;\r\n        color:#fff;\r\n        font-weight:600;\r\n    }\r\n    .week-day{\r\n        width:100%;\r\n    }\r\n    .week-day .every-day{\r\n        display:inline-block;\r\n        width:14.28%;\r\n        text-align:center;\r\n        line-height:50px;\r\n        cursor:pointer;\r\n    }\r\n    .other-day{\r\n        color:#ccc;\r\n    }\r\n    .now-day{\r\n        background-color:#007fff;\r\n        color:#fff;\r\n        border-radius:8px;\r\n    }\r\n    .active-day:not(.other-day){\r\n        color:#007fff;\r\n        border:2px solid #007fff;\r\n        line-height:46px;\r\n        border-radius:8px;\r\n        color:#000;\r\n    }\r\n</style>"]}]}